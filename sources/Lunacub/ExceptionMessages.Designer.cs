//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Caxivitual.Lunacub {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class ExceptionMessages {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal ExceptionMessages() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Caxivitual.Lunacub.ExceptionMessages", typeof(ExceptionMessages).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Chunk {0} has content length surpassed Stream&apos;s length..
        /// </summary>
        internal static string ChunkContentLengthOverflow {
            get {
                return ResourceManager.GetString("ChunkContentLengthOverflow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Chunk {0} has position surpassed stream&apos;s length..
        /// </summary>
        internal static string ChunkPositionSurpassedStreamLength {
            get {
                return ResourceManager.GetString("ChunkPositionSurpassedStreamLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Resource name cannot be null or empty string..
        /// </summary>
        internal static string DisallowNullOrEmptyResourceName {
            get {
                return ResourceManager.GetString("DisallowNullOrEmptyResourceName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tag index {0} cannot be null or empty string..
        /// </summary>
        internal static string DisallowNullOrEmptyTag {
            get {
                return ResourceManager.GetString("DisallowNullOrEmptyTag", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Trying to insert library with id of {0} but library with same id has already been registered..
        /// </summary>
        internal static string DuplicateLibraryId {
            get {
                return ResourceManager.GetString("DuplicateLibraryId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected chunk tag {0} at position {1}..
        /// </summary>
        internal static string ExpectedChunkAtPosition {
            get {
                return ResourceManager.GetString("ExpectedChunkAtPosition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stream does not contain sufficient data to read header for chunk {0}..
        /// </summary>
        internal static string FailedToReadChunkHeader {
            get {
                return ResourceManager.GetString("FailedToReadChunkHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tag &apos;{0}&apos; contains invalid character at position {1}..
        /// </summary>
        internal static string InvalidTagCharacter {
            get {
                return ResourceManager.GetString("InvalidTagCharacter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Creating resource library with id of 0 is invalid..
        /// </summary>
        internal static string LibraryIDMustBeNotNull {
            get {
                return ResourceManager.GetString("LibraryIDMustBeNotNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The comparer must implement IAlternateEqualityComparer&lt;{0}, {1}&gt;.
        /// </summary>
        internal static string RequiresComparerImplementsAlternateLookup {
            get {
                return ResourceManager.GetString("RequiresComparerImplementsAlternateLookup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Resource Id {0} is already registered..
        /// </summary>
        internal static string ResourceIdAlreadyRegistered {
            get {
                return ResourceManager.GetString("ResourceIdAlreadyRegistered", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Resource name &apos;{0}&apos; is already registered to resource with id {1}..
        /// </summary>
        internal static string ResourceNameAlreadyRegistered {
            get {
                return ResourceManager.GetString("ResourceNameAlreadyRegistered", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Source Stream at address &apos;{0}&apos; must be readable and seekable..
        /// </summary>
        internal static string SourceStreamMustBeSeekableOrReadable {
            get {
                return ResourceManager.GetString("SourceStreamMustBeSeekableOrReadable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Source Stream at address &apos;{0}&apos; must not be writable..
        /// </summary>
        internal static string SourceStreamMustNotBeWritable {
            get {
                return ResourceManager.GetString("SourceStreamMustNotBeWritable", resourceCulture);
            }
        }
    }
}
