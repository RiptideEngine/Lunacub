//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Caxivitual.Lunacub {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class ExceptionMessages {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal ExceptionMessages() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Caxivitual.Lunacub.ExceptionMessages", typeof(ExceptionMessages).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Chunk {0} has content length surpassed Stream&apos;s length..
        /// </summary>
        internal static string ChunkContentLengthOverflow {
            get {
                return ResourceManager.GetString("ChunkContentLengthOverflow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tag cannot be null, empty or consists of only white space characters..
        /// </summary>
        internal static string DisallowNullEmptyOrWhiteSpaceTag {
            get {
                return ResourceManager.GetString("DisallowNullEmptyOrWhiteSpaceTag", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Trying to insert library with id of {0} but library with same id has already been registered..
        /// </summary>
        internal static string DuplicateLibraryId {
            get {
                return ResourceManager.GetString("DuplicateLibraryId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Key cannot be empty or consist of only whitespace characters..
        /// </summary>
        internal static string EmptyOrWhitespaceKey {
            get {
                return ResourceManager.GetString("EmptyOrWhitespaceKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected 4 characters tag name..
        /// </summary>
        internal static string Expected4CharactersTagName {
            get {
                return ResourceManager.GetString("Expected4CharactersTagName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected tag 0x{0} at position {1}, got 0x{2}..
        /// </summary>
        internal static string ExpectedTagAtPosition {
            get {
                return ResourceManager.GetString("ExpectedTagAtPosition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected header magic number, got 0x{0}..
        /// </summary>
        internal static string ExpectHeaderMagic {
            get {
                return ResourceManager.GetString("ExpectHeaderMagic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot read chunk amount due to insufficient Stream data..
        /// </summary>
        internal static string InsufficientStream_ChunkAmount {
            get {
                return ResourceManager.GetString("InsufficientStream_ChunkAmount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot read chunk length due to insufficient Stream data..
        /// </summary>
        internal static string InsufficientStream_ChunkLength {
            get {
                return ResourceManager.GetString("InsufficientStream_ChunkLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot read chunk offsets due to insufficient Stream data..
        /// </summary>
        internal static string InsufficientStream_ChunkOffsets {
            get {
                return ResourceManager.GetString("InsufficientStream_ChunkOffsets", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Length of chunk 0x{0} surpassed Stream..
        /// </summary>
        internal static string InsufficientStream_LengthSurpassedStream {
            get {
                return ResourceManager.GetString("InsufficientStream_LengthSurpassedStream", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot read magic number due to insufficient Stream data..
        /// </summary>
        internal static string InsufficientStream_MagicNumber {
            get {
                return ResourceManager.GetString("InsufficientStream_MagicNumber", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Offset of chunk 0x{0} surpassed Stream..
        /// </summary>
        internal static string InsufficientStream_OffsetSurpassedStream {
            get {
                return ResourceManager.GetString("InsufficientStream_OffsetSurpassedStream", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot read version due to insufficient Stream data..
        /// </summary>
        internal static string InsufficientStream_Version {
            get {
                return ResourceManager.GetString("InsufficientStream_Version", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tag &apos;{0}&apos; contains invalid character at position {1}..
        /// </summary>
        internal static string InvalidTagCharacter {
            get {
                return ResourceManager.GetString("InvalidTagCharacter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Creating resource library with id of 0 is invalid..
        /// </summary>
        internal static string LibraryIDMustBeNotNull {
            get {
                return ResourceManager.GetString("LibraryIDMustBeNotNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Spans length mismatched, destination span has less elements than source span..
        /// </summary>
        internal static string MismatchLength_DestinationSpanHasLessElement {
            get {
                return ResourceManager.GetString("MismatchLength_DestinationSpanHasLessElement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The comparer must implement IAlternateEqualityComparer&lt;{0}, {1}&gt;.
        /// </summary>
        internal static string RequiresComparerImplementsAlternateLookup {
            get {
                return ResourceManager.GetString("RequiresComparerImplementsAlternateLookup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Resource Id {0} is already registered..
        /// </summary>
        internal static string ResourceIdAlreadyRegistered {
            get {
                return ResourceManager.GetString("ResourceIdAlreadyRegistered", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Resource name &apos;{0}&apos; is already registered to resource with id {1}..
        /// </summary>
        internal static string ResourceNameAlreadyRegistered {
            get {
                return ResourceManager.GetString("ResourceNameAlreadyRegistered", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Source Stream at address &apos;{0}&apos; must be readable and seekable..
        /// </summary>
        internal static string SourceStreamMustBeSeekableOrReadable {
            get {
                return ResourceManager.GetString("SourceStreamMustBeSeekableOrReadable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Source Stream at address &apos;{0}&apos; must not be writable..
        /// </summary>
        internal static string SourceStreamMustNotBeWritable {
            get {
                return ResourceManager.GetString("SourceStreamMustNotBeWritable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stream is neither readable nor seekable..
        /// </summary>
        internal static string StreamNotReaderOrNotSeekable {
            get {
                return ResourceManager.GetString("StreamNotReaderOrNotSeekable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Header version {0}.{1} is unsupported..
        /// </summary>
        internal static string UnsupportedHeaderVersion {
            get {
                return ResourceManager.GetString("UnsupportedHeaderVersion", resourceCulture);
            }
        }
    }
}
