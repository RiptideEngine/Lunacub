<?xml version="1.0" encoding="utf-8"?>

<root>
    <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
        <xsd:element name="root" msdata:IsDataSet="true">
            
        </xsd:element>
    </xsd:schema>
    <resheader name="resmimetype">
        <value>text/microsoft-resx</value>
    </resheader>
    <resheader name="version">
        <value>1.3</value>
    </resheader>
    <resheader name="reader">
        <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
    </resheader>
    <resheader name="writer">
        <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
    </resheader>
    <data name="RequiresComparerImplementsAlternateLookup" xml:space="preserve">
        <value>The comparer must implement IAlternateEqualityComparer&lt;{0}, {1}&gt;</value>
    </data>
    <data name="InsufficientStream_OffsetSurpassedStream" xml:space="preserve">
        <value>Offset of chunk 0x{0} surpassed Stream.</value>
    </data>
    <data name="InsufficientStream_LengthSurpassedStream" xml:space="preserve">
        <value>Length of chunk 0x{0} surpassed Stream.</value>
    </data>
    <data name="ExpectedTagAtPosition" xml:space="preserve">
        <value>Expected tag 0x{0} at position {1}, got 0x{2}.</value>
    </data>
    <data name="ChunkContentLengthOverflow" xml:space="preserve">
        <value>Chunk {0} has content length surpassed Stream's length.</value>
    </data>
    <data name="ResourceIdAlreadyRegistered" xml:space="preserve">
        <value>Resource Id {0} is already registered.</value>
    </data>
    <data name="ResourceNameAlreadyRegistered" xml:space="preserve">
        <value>Resource name '{0}' is already registered to resource with id {1}.</value>
    </data>
    <data name="InvalidTagCharacter" xml:space="preserve">
        <value>Tag '{0}' contains invalid character at position {1}.</value>
    </data>
    <data name="DisallowNullEmptyOrWhiteSpaceTag" xml:space="preserve">
        <value>Tag cannot be null, empty or consists of only white space characters.</value>
    </data>
    <data name="SourceStreamMustBeSeekableOrReadable" xml:space="preserve">
        <value>Source Stream at address '{0}' must be readable and seekable.</value>
    </data>
    <data name="SourceStreamMustNotBeWritable" xml:space="preserve">
        <value>Source Stream at address '{0}' must not be writable.</value>
    </data>
    <data name="LibraryIDMustBeNotNull" xml:space="preserve">
        <value>Creating resource library with id of 0 is invalid.</value>
    </data>
    <data name="DuplicateLibraryId" xml:space="preserve">
        <value>Trying to insert library with id of {0} but library with same id has already been registered.</value>
    </data>
    <data name="EmptyOrWhitespaceKey" xml:space="preserve">
        <value>Key cannot be empty or consist of only whitespace characters.</value>
    </data>
    <data name="ExpectHeaderMagic" xml:space="preserve">
        <value>Expected header magic number, got 0x{0}.</value>
    </data>
    <data name="StreamNotReaderOrNotSeekable" xml:space="preserve">
        <value>Stream is neither readable nor seekable.</value>
    </data>
    <data name="UnsupportedHeaderVersion" xml:space="preserve">
        <value>Header version {0}.{1} is unsupported.</value>
    </data>
    <data name="InsufficientStream_MagicNumber" xml:space="preserve">
        <value>Cannot read magic number due to insufficient Stream data.</value>
    </data>
    <data name="InsufficientStream_Version" xml:space="preserve">
        <value>Cannot read version due to insufficient Stream data.</value>
    </data>
    <data name="InsufficientStream_ChunkAmount" xml:space="preserve">
        <value>Cannot read chunk amount due to insufficient Stream data.</value>
    </data>
    <data name="InsufficientStream_ChunkOffsets" xml:space="preserve">
        <value>Cannot read chunk offsets due to insufficient Stream data.</value>
    </data>
    <data name="MismatchLength_DestinationSpanHasLessElement" xml:space="preserve">
        <value>Spans length mismatched, destination span has less elements than source span.</value>
    </data>
    <data name="InsufficientStream_ChunkLength" xml:space="preserve">
        <value>Cannot read chunk length due to insufficient Stream data.</value>
    </data>
    <data name="Expected4CharactersTagName" xml:space="preserve">
        <value>Expected 4 characters tag name.</value>
    </data>
</root>