//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Caxivitual.Lunacub.Building {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class ExceptionMessages {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal ExceptionMessages() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Caxivitual.Lunacub.Building.ExceptionMessages", typeof(ExceptionMessages).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Build information directory &apos;{0}&apos; does not exist..
        /// </summary>
        internal static string BuildInfoDirectoryNotExist {
            get {
                return ResourceManager.GetString("BuildInfoDirectoryNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Circular resource dependency detected: {0}..
        /// </summary>
        internal static string CircularResourceDependency {
            get {
                return ResourceManager.GetString("CircularResourceDependency", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Trying to insert library with id of {0} but library with same id has already been registered..
        /// </summary>
        internal static string DuplicateLibraryId {
            get {
                return ResourceManager.GetString("DuplicateLibraryId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Key cannot be empty or consist of only whitespace characters..
        /// </summary>
        internal static string EmptyOrWhitespaceKey {
            get {
                return ResourceManager.GetString("EmptyOrWhitespaceKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No suitable serializer for resource type &apos;{0}&apos; found...
        /// </summary>
        internal static string NoSuitableSerializerFactory {
            get {
                return ResourceManager.GetString("NoSuitableSerializerFactory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Resource output directory &apos;{0}&apos; does not exist..
        /// </summary>
        internal static string ResourceOutputDirectoryNotExist {
            get {
                return ResourceManager.GetString("ResourceOutputDirectoryNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SerializerFactory does not allows null Serializer to be returned..
        /// </summary>
        internal static string SerializerFactoryDisallowNullSerializerReturn {
            get {
                return ResourceManager.GetString("SerializerFactoryDisallowNullSerializerReturn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Concatenated source path &apos;{0}&apos; lies outside root directory &apos;{1}&apos;.
        /// </summary>
        internal static string SourceAddressOutsideRootDirectory {
            get {
                return ResourceManager.GetString("SourceAddressOutsideRootDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to find Importer with key &apos;{0}&apos;..
        /// </summary>
        internal static string UnregisteredImporter {
            get {
                return ResourceManager.GetString("UnregisteredImporter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to find Processor with key &apos;{0}&apos;..
        /// </summary>
        internal static string UnregisteredProcessor {
            get {
                return ResourceManager.GetString("UnregisteredProcessor", resourceCulture);
            }
        }
    }
}
